version: 2

jobs:
  checkout_code:
    docker:
      - image: circleci/node:latest
      - image: circleci/php:7.2-node-browsers
      - image: circleci/mysql:5
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .

  frontend:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - restore_cache:
        keys:
          - v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-npm-{{ checksum "frontend/package.json" }}
      - run: cd frontend && npm install
      - save_cache:
          key: v1-npm-{{ checksum "frontend/package.json" }}
          paths:
            - ~/repo/frontend/node_modules
      - run:
          command: |
            cd frontend
            npm test

  laravel:
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: circleci/php:7.2-node-browsers
      - image: circleci/mysql:5
        environment:
          MYSQL_DATABASE: mysql
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_ROOT_PASSWORD: mysql
    working_directory: ~/repo  
    steps:
      - restore_cache:
        keys:
          - v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: sudo apt install -y zlib1g-dev
      - run: sudo composer self-update
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: cd src && cp .env.circleci .env
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "src/composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: cd src && composer install -n --prefer-dist
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "src/composer.lock" }}
          paths:
            - src/vendor
      - run: cd src && php artisan migrate --database=mysql --force
      - run: cd src && php artisan jwt:secret && php artisan key:generate
      - run: cd src && php vendor/bin/phpunit
    
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - frontend:
          requires:
            - checkout_code
      - laravel:
          requires:
            - checkout_code