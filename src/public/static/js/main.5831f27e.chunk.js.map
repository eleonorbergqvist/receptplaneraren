{"version":3,"sources":["config.ts","services/Api.ts","components/PrimaryMenuButton/PrimaryMenuButton.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Tabs/Tabs.tsx","containers/StartLoggedIn/StartLoggedIn.tsx","components/Card/Card.tsx","components/Modal/Modal.tsx","containers/StartLoggedOut/StartLoggedOut.tsx","components/Input/Input.tsx","components/LoginForm/LoginForm.tsx","containers/LogIn/LogIn.tsx","containers/LogOut/LogOut.tsx","components/RegisterForm/RegisterForm.tsx","containers/Register/Register.tsx","containers/ResetPassword/ResetPassword.tsx","containers/CreateResetPassword/CreateResetPassword.tsx","components/RecipeTags/RecipeTags.tsx","components/IngredientsInput/IngredientsInput.tsx","components/InputList/InputList.tsx","components/RecipeForm/RecipeForm.tsx","containers/CreateRecipe/CreateRecipe.tsx","components/Select/Select.tsx","components/AddDayMealModal/AddDayMealModal.tsx","containers/BrowseRecipes/BrowseRecipes.tsx","containers/RecipeDetail/RecipeDetail.tsx","containers/TermsAndConditions/TermsAndConditions.tsx","components/RecipeEditForm/RecipeEditForm.tsx","containers/RecipeEdit/RecipeEdit.tsx","containers/App/App.tsx","serviceWorker.ts","models.ts","store.ts","index.tsx"],"names":["defaultConfig","API_URL","IMAGE_PREFIX","FALLBACK_IMAGE","getEnv","name","window","config","Api","create","baseURL","arguments","length","undefined","api","apisauce","timeout","register","values","post","user_name","email","password","logIn","passwordCreate","passwordReset","reset_token","recipeCreate","jwtToken","status","instructions","title","tags","headers","Authorization","concat","recipeIngredientCreate","ingredients","recipe_id","recipeIngredientUpdate","put","recipeTags","get","recipeImage","image","recipesAllInfo","recipeBySlug","slug","recipeUpdate","recipeDelete","recipeId","delete","daymealsByDate","monday","daymealUpdate","date","meal_type","shoppingList","PrimaryMenuButton","props","react_default","a","createElement","react_router_dom","className","to","link","text","Header","state","burgerIsActive","handleToggleMenuClick","_this","setState","role","aria-label","href","this","aria-expanded","data-target","onClick","aria-hidden","id","buttons","Component","HeaderLoggedOut","components_PrimaryMenuButton_PrimaryMenuButton","key","Header_Header_Header","HeaderLoggedIn","Footer","Fragment","copyrightText","dayMealToLabel","mealType","RecipeItem","_props$data","data","recipe","typeLabel","console","log","recipe_ingredients","map","recipeIngredient","index","amount","measurement","ingredient","src","alt","recipe_tags","recipeTag","disabled","EmptyRecipeItem","TabNav","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","_this$props","items","onChange","selected","item","e","label","StartLoggedIn","mondayDate","weekmeals","selectedDayOfWeek","isLoggedOut","handleWeekChange","_callee","direction","newMondayDate","regenerator_default","wrap","_context","prev","next","preventDefault","clone","add","subtract","getDayMealsData","stop","_callee2","response","_context2","format","user","access_token","sent","abrupt","ok","Error","daymeals","handleTabNavChange","selectedTab","handleShoppingList","_callee3","_context3","shoppinglist","_this2","moment","startOf","_this3","_this$state","react_router","week","isoWeek","dayDate","matchingDays","filter","day","Header_HeaderLoggedIn","Tabs_TabNav","StartLoggedIn_DayMealList","meals","renderMissingMeal","Tabs_EmptyRecipeItem","renderMealItem","meal","Tabs_RecipeItem","components_Footer_Footer","connect","isLoggedIn","DayMealList","mealsByType","reduce","acc","daymeal","toConsumableArray","Array","fill","Card","content","Modal","handleClick","event","onClose","React","StartLoggedOut","modelIsOpen","handleLoggedOutModalClose","locationState","location","Header_HeaderLoggedOut","Card_Card_Card","showLogOutModal","components_Modal_Modal","dispatch","setToken","Input","type","placeholder","onBlur","error","validationSchema","Yup","shape","required","min","LoginForm","onSubmit","formik_esm","initialValues","general","actions","render","formikBag","errors","components_Input_Input","handleChange","handleBlur","touched","isValid","LogIn","handleSubmit","setSubmitting","setErrors","components_LoginForm_LoginForm","LogOut","logOut","pathname","password_confirmation","oneOf","consent","test","RegisterForm","Register","components_RegisterForm_RegisterForm","ResetPassword","token","match","params","resetForm","setStatus","message","CreateResetPassword","RecipeTags","tag","isSelected","selectedTags","includes","onToggleTag","handleOnClick","MEASUREMENT_LIST","IngredientsInput","objectWithoutProperties","objectSpread","defineProperty","currentTarget","x","onDelete","emptyIngredient","InputList","slice","handleDelete","components_IngredientsInput_IngredientsInput","assign","RecipeForm","call","handleAddItem","handleIngredientChange","handleInputFileChange","fileList","target","files","file","reader","FileReader","onload","result","readAsDataURL","accept","components_InputList_InputList","setFieldValue","component","CreateRecipe","imageResponse","handleToggleTag","RecipeTags_RecipeTags_RecipeTags","components_RecipeForm_RecipeForm","Select","options","AddDayMealModal","weekList","dayList","currentWeek","currentDay","isoWeekday","mealList","currentMeal","t0","weeksInYear","isoWeeksInYear","allWeeks","i","components_Select_Select","RecipeListItem","onOpenModal","BrowseRecipes","recipes","modalIsOpen","clickedRecipe","handleOpenModal","handleModalClose","recipesResponse","BrowseRecipes_RecipeListItem","components_AddDayMealModal_AddDayMealModal","RecipeDetail","isDeleted","handleDeleteRecipe","url","substr","lastIndexOf","TermsAndConditions","RecipeEditForm","isImageChanged","RecipeEdit","isEmpty","recipeResponse","selectedTagsObjects","obj","formattedRecipe","components_RecipeEditForm_RecipeEditForm","every","withApi","App","exact","path","Boolean","hostname","initialState","reducers","persistPlugin","createRematchPersist","whitelist","throttle","version","store","init","models","plugins","persistor","getPersistor","ReactDOM","es","integration_react","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5831f27e.chunk.js","sourcesContent":["const defaultConfig: any = {\n  API_URL: \"http://localhost:8000/api/\",\n  IMAGE_PREFIX: \"http://localhost:8000/storage/\",\n  FALLBACK_IMAGE: \"https://bulma.io/images/placeholders/128x128.png\",\n}\n\nexport const getEnv = (name: string) => {\n  return (window as any).config[name] || defaultConfig[name];\n}\n","import apisauce from \"apisauce\";\n\n\nconst create = (baseURL = \"http://localhost:8000/api/\") => {\n  const api = apisauce.create({\n    baseURL,\n    timeout: 10000,\n  });\n\n  const register = (values: any) =>\n    api.post(\"/register\", {\n      user_name: values.user_name,\n      email: values.email,\n      password: values.password\n    });\n\n  const logIn = (values: any) =>\n    api.post(\"/login\", {\n      email: values.email,\n      password: values.password\n    });\n\n  const passwordCreate = (values: any) =>\n    api.post(\"/password/create\", {\n      email: values.email,\n    });\n\n  const passwordReset = (values: any) =>\n    api.post(\"/password/reset\", {\n      reset_token: values.reset_token,\n      password: values.password,\n    });\n\n  const recipeCreate = (values: any, jwtToken: string | null) =>\n    api.post(\"/recipes\", {\n      status: \"test\", //add buttons in form\n      instructions: values.instructions,\n      title: values.title,\n      tags: values.tags,\n    }, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipeIngredientCreate = (values: any, jwtToken: string | null) =>\n    api.post(\"/recipe-ingredients\", {\n      ingredients: values.ingredients,\n      recipe_id: values.recipe_id,\n    }, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipeIngredientUpdate = (values: any, jwtToken: string | null) =>\n    api.put(\"/recipe-ingredients\", {\n      ingredients: values.ingredients,\n      recipe_id: values.recipe_id,\n    }, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n\n  const recipeTags = (jwtToken: string | null) =>\n    // api.setHeader('Authorization', `Bearer ${jwtToken}`);\n    api.get('/recipe-tags', {}, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipeImage = (values: any, jwtToken: string | null) =>\n    api.post('/recipes/image/store', {\n      recipe_id: values.recipe_id,\n      image: values.image,\n    }, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipesAllInfo = (jwtToken: string | null) =>\n    api.get('/recipesAll', {}, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipeBySlug = (jwtToken: string | null, slug: string) =>\n    api.get(`/recipes/${slug}`, {}, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipeUpdate = (values: any, jwtToken: string | null) =>\n    api.put(`/recipes/${values.slug}`, {\n      status: 'test',\n      instructions: values.instructions,\n      title: values.title,\n      tags: values.tags,\n      slug: values.slug\n    }, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const recipeDelete = (recipeId: number, jwtToken: string | null) =>\n    api.delete(`/recipes/${recipeId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const daymealsByDate = (jwtToken: string | null, monday: string) =>\n    api.get(`/daymeals/${monday}`, {}, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  const daymealUpdate = (values: any, jwtToken: string | null) =>\n  api.put(\"/daymeals-update\", {\n    date: values.date,\n    meal_type: values.meal_type,\n    recipe_id: values.recipe_id,\n  }, {\n    headers: {\n      Authorization: `Bearer ${jwtToken}`\n    }\n  }\n);\n\n  const shoppingList = (jwtToken: string | null, monday: string) =>\n    api.get(`/shopping-list/${monday}`, {}, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }\n  );\n\n  return {\n    register,\n    logIn,\n    passwordCreate,\n    passwordReset,\n    recipeCreate,\n    recipeIngredientCreate,\n    recipeIngredientUpdate,\n    recipeTags,\n    recipeImage,\n    recipesAllInfo,\n    recipeBySlug,\n    recipeUpdate,\n    recipeDelete,\n    daymealsByDate,\n    daymealUpdate,\n    shoppingList,\n  };\n};\n\nexport type iApi = ReturnType<typeof create>;\n\nexport default {\n  create\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport interface PrimaryMenuButtonProps {\n  text: string;\n  link: string;\n  className: string;\n}\n\nconst PrimaryMenuButton = (props: PrimaryMenuButtonProps) => (\n  <Link className={`${props.className} button`} to={props.link}>\n    {props.text}\n  </Link>\n);\n\nexport default PrimaryMenuButton;\n","/* eslint jsx-a11y/anchor-is-valid: 1 */\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrimaryMenuButton from \"../PrimaryMenuButton/PrimaryMenuButton\";\nimport \"./Header.css\";\n\nexport interface HeaderProps {\n  buttons: JSX.Element[];\n}\nexport interface HeaderState {\n  burgerIsActive: boolean;\n}\n\nclass Header extends Component<HeaderProps, HeaderState> {\n  state = {\n    burgerIsActive: false\n  }\n\n  handleToggleMenuClick = () => {\n    this.setState({ burgerIsActive: !this.state.burgerIsActive });\n  }\n\n  render() {\n    return (\n      <nav className=\"header navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a href=\"/\" className=\"header__title navbar-item\">Receptplaneraren</a>\n          <a\n            role=\"button\"\n            href=\"#\"\n            className= {\"navbar-burger burger \" + (this.state.burgerIsActive ? 'is-active' : '')}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n            onClick={this.handleToggleMenuClick}\n          >\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className={\"navbar-menu \" + (this.state.burgerIsActive ? 'is-active' : '')}>\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/\">\n              Home\n            </Link>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons header__buttons\">{this.props.buttons}</div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nexport const HeaderLoggedOut = (props:any) => {\n  const buttons = [\n    <PrimaryMenuButton\n      key={1}\n      text=\"Sign Up\"\n      link={\"/register\"}\n      className=\"header__button--yellow\"\n    />,\n    <PrimaryMenuButton\n      key={2}\n      text=\"Log In\"\n      link={\"/login\"}\n      className=\"header__button--pink\"\n    />\n  ];\n\n  return <Header buttons={buttons} />\n}\n\nexport const HeaderLoggedIn = (props:any) => {\n  const buttons = [\n    <PrimaryMenuButton\n      key={1}\n      text=\"Create Recipe\"\n      link={\"/recipe/create\"}\n      className=\"header__button--yellow\"\n    />,\n    <PrimaryMenuButton\n      key={2}\n      text=\"Browse Recipes\"\n      link={\"/recipe/browse\"}\n      className=\"header__button--yellow\"\n    />,\n    <PrimaryMenuButton\n      key={3}\n      text=\"Settings\"\n      link={\"#\"}\n      className=\"header__button--yellow\"\n    />,\n    <PrimaryMenuButton\n      key={4}\n      text=\"Log Out\"\n      link={\"/logout\"}\n      className=\"header__button--pink\"\n    />\n  ];\n\n  return <Header buttons={buttons} />\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nexport interface FooterProps {\n  copyrightText: string;\n}\n\nconst Footer = (props: FooterProps) => {\n  return (\n    <React.Fragment>\n      <footer className=\"footer footer\">\n        <div className=\"content has-text-centered\">\n          <p className=\"footer__text\">{props.copyrightText}</p>\n        </div>\n      </footer>\n    </React.Fragment>\n  );\n};\n\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { getEnv } from \"../../config\";\nimport \"./Tabs.css\";\n\ninterface TabProps {\n  daymealsForWeek: any,\n}\n\ninterface TabState {\n  activeTab: number,\n}\n\nexport interface RecipeItemProps {\n  data: {\n    meal_type: number,\n    id: number,\n    recipe: {\n      title: any,\n      recipe_ingredients: any,\n      recipe_tags: any,\n      instructions: any,\n      image: any\n    },\n  },\n}\n\nexport const dayMealToLabel = (mealType:number) => {\n  switch (mealType) {\n    case 0:\n      return \"BREAKFAST\";\n    case 1:\n      return \"LUNCH\";\n    case 2:\n      return \"DINNER\";\n    default:\n      return \"UNSPECIFIED\";\n  }\n}\n\nexport const RecipeItem = (props: RecipeItemProps) => {\n  const {\n    recipe,\n    meal_type: mealType,\n    id,\n  } = props.data;\n\n  // FIXME: Remove check and make sure daymeal always contains recipe\n  if (!recipe) {\n    return <p>Daymeal id {id} is missing recipe</p>\n  }\n\n  const typeLabel = dayMealToLabel(mealType);\n  console.log(recipe);\n\n  return (\n    <div className=\"recipeitem\">\n      <div className=\"content tabs__mealContainer columns\">\n          <div className=\"column\">\n            <h3>{typeLabel}</h3>\n            <h5>{recipe.title || 'No title'}</h5>\n            <h5>Ingredients</h5>\n            <ul>\n              {recipe.recipe_ingredients.map((recipeIngredient: any, index: number)  =>\n              <li key={index} >\n              {recipeIngredient.amount}\n              {recipeIngredient.measurement}\n              {recipeIngredient.ingredient.name}\n              </li>)}\n            </ul>\n          </div>\n          <div className=\"column\">\n            <h5>Instructions</h5>\n            <p>\n              {recipe.instructions}\n            </p>\n          </div>\n          <div className=\"column\">\n            <div className=\"card\">\n              <div className=\"card-image\">\n                <img\n                  src={getEnv('IMAGE_PREFIX')+recipe.image || getEnv('FALLBACK_IMAGE')}\n                  alt=\"\"\n                />\n              </div>\n              <div className=\"card-content\">\n              {recipe.recipe_tags.map((recipeTag: any, index: number)  =>\n                <li key={index}>\n                  {recipeTag.name}\n                </li>)}\n              </div>\n            </div>\n            <br />\n            <button disabled className=\"button\">Browse new</button>\n          </div>\n        </div>\n    </div>\n  )\n};\n\ninterface EmptyRecipeItemProps {\n  mealType: number,\n}\nexport const EmptyRecipeItem = (props: EmptyRecipeItemProps) => {\n  const { mealType } = props;\n  const typeLabel = dayMealToLabel(mealType);\n\n  return (\n    <div className=\"recipeitem\">\n      <div className=\"content tabs__mealContainer columns\">\n          <div className=\"column\">\n            <h3>{typeLabel}</h3>\n          </div>\n          <div className=\"column\">\n          </div>\n          <div className=\"column\">\n            <button disabled className=\"button\">Browse new</button>\n          </div>\n        </div>\n    </div>\n  )\n};\n\ninterface TabNavProps {\n  items: any,\n  onChange: any,\n  selected: any,\n}\n\ninterface TabNavState {\n  activeTab: number,\n}\n\nexport class TabNav extends Component<TabNavProps, TabNavState> {\n  render() {\n    const { items, onChange, selected } = this.props;\n\n    return (\n      <div className=\"tabs\">\n        {items.map((item:any) => {\n          let className = `tabs__tabNav--${item.value}`;\n\n          if (item.value === selected) {\n            className = `${className} tabs__tabNav--selected`;\n          }\n\n          return (\n            <button\n              className={className}\n              key={item.value}\n              onClick={e => onChange(item)}\n            >{item.label}</button>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nclass Tabs extends Component<TabProps, TabState> {\n  state = {\n    activeTab: 0,\n  }\n\n  render() {\n    return (\n      <div className=\"tabs__dayContainer\"> */}\n        <RecipeItem\n          data={this.props.daymealsForWeek}/>\n      </div>\n    )\n  }\n}\n\nexport default Tabs;\n","import React, { Component, FormEvent } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as moment from 'moment';\nimport { ApiResponse } from \"apisauce\";\nimport { iRootState } from \"../../store\";\nimport { iApi } from \"../../services/Api\";\nimport { HeaderLoggedIn } from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { TabNav, RecipeItem, EmptyRecipeItem } from \"../../components/Tabs/Tabs\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\ntype connectedProps = ReturnType<typeof mapState>;\ntype Props = connectedProps & { api: iApi }\n\ninterface StartLoggedInState {\n  mondayDate: any,\n  weekmeals: any,\n  selectedDayOfWeek: number,\n  isLoggedOut: boolean,\n  shoppingList: any,\n}\n\nclass StartLoggedIn extends Component<Props> {\n  state: StartLoggedInState = {\n    mondayDate: null,\n    weekmeals: [],\n    selectedDayOfWeek: 0,\n    isLoggedOut: false,\n    shoppingList: [],\n  }\n\n componentDidMount () {\n    const mondayDate = moment.default().startOf('isoWeek');\n\n    this.setState({ mondayDate, }, () => {\n      this.getDayMealsData()\n    });\n  }\n\n  handleWeekChange = async (e: React.FormEvent, direction:number) => {\n    e.preventDefault();\n    let newMondayDate = this.state.mondayDate;\n\n    if (direction === 1) {\n      newMondayDate = newMondayDate.clone().add(7, 'days');\n    }\n\n    if (direction === -1) {\n      newMondayDate = newMondayDate.clone().subtract(7, 'days');\n    }\n\n    this.setState({ mondayDate: newMondayDate }, () => {\n      this.getDayMealsData()\n    });\n\n    // TODO: använda debounce vid många click\n  }\n\n  getDayMealsData = async () => {\n    const { api } = this.props\n    const { mondayDate } = this.state\n\n    let monday = mondayDate.format('YYYY-MM-DD');\n    const response: ApiResponse<any> = await api.daymealsByDate(\n      this.props.user.access_token,\n      monday\n    );\n\n    if (response.status === 401) {\n      this.setState({\n        isLoggedOut: true,\n      })\n      return;\n    }\n\n    if (!response.ok) {\n      throw Error(\"DAYMEAL ERROR\");\n    }\n\n    this.setState({\n      weekmeals: response.data.daymeals,\n    })\n  }\n\n  handleTabNavChange = (item:any) => {\n    console.log(item);\n\n    this.setState( {\n      selectedTab: item.value,\n    });\n  }\n\n  handleShoppingList = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const monday = this.state.mondayDate;\n    const { api } = this.props\n    const response: ApiResponse<any> = await api.shoppingList(\n      this.props.user.access_token,\n      monday,\n    );\n\n    if (response.status === 401) {\n      this.setState({\n        isLoggedOut: true,\n      })\n      return;\n    }\n\n    if (!response.ok) {\n      throw Error(\"SHOPPINGLIST ERROR\");\n    }\n\n    console.log(response.data.shoppinglist);\n    this.setState({\n      shoppingList: response.data.shoppinglist\n    })\n  }\n\n  render() {\n    const { weekmeals, mondayDate } = this.state;\n\n    if (!mondayDate) {\n      return null;\n    }\n\n    if (this.state.isLoggedOut) {\n      return <Redirect to={\"/logout\"} />;\n    }\n\n    if (!this.props.user.access_token) {\n      return <Redirect to={\"/login\"} />;\n    }\n\n    const week = mondayDate.isoWeek()\n\n    const dayDate = mondayDate.clone().add(\n      this.state.selectedDayOfWeek, 'days'\n    ).format(\"YYYY-MM-DD\");\n\n    const matchingDays = weekmeals.filter((day:any) => day[0] === dayDate);\n    const day = matchingDays.length > 0 ? matchingDays[0] : [];\n    const daymeals = day[1];\n\n    return (\n      <React.Fragment>\n        <HeaderLoggedIn />\n        <main className=\"container\">\n          <div className=\"start__Container columns\">\n            <div className=\"column is-two-fifths\">\n              <h1>Vecka {week}</h1>\n              <span id=\"left\" className=\"icon\" onClick={e => this.handleWeekChange(e, -1)}>\n                <i className=\"fas fa-caret-left\" />\n              </span>\n              <span id=\"right\" className=\"icon\" onClick={e => this.handleWeekChange(e, 1)}>\n                <i className=\"fas fa-caret-right\" />\n              </span>\n              <p>\n                Aenean iaculis gravida diam, et tincidunt diam elementum\n                pulvinar. Curabitur dignissim tortor at blandit iaculis.\n                Phasellus consequat velit quis leo pharetra, et ultricies turpis\n                aliquet. Fusce pulvinar, leo faucibus facilisis ullamcorper,\n                ligula mi interdum quam, vitae accumsan leo augue sed neque.\n                Etiam sit amet ante malesuada, luctus est at, finibus nunc. Nam\n                feugiat feugiat nulla ut blandit. Morbi eget porttitor mauris,\n                sed lobortis justo. Sed eget metus at risus laoreet consectetur\n                bibendum a nunc. Quisque quam magna, sollicitudin egestas orci\n                a, congue aliquam nibh.\n              </p>\n              <button className=\"button\" onClick={this.handleShoppingList}>Generate Shoppinglist</button>\n              <br />\n              {this.state.shoppingList.map((ingredient: any, index: number) => {\n                return <li key={index}>{ingredient.amount}{ingredient.measurement}{ingredient.ingredient.name}</li>\n              })}\n            </div>\n            <div className=\"column\">\n\n              <TabNav\n                items={[\n                  {label: \"Monday\", value: 0},\n                  {label: \"Tuesday\", value: 1},\n                  {label: \"Wednesday\", value: 2},\n                  {label: \"Thursday\", value: 3},\n                  {label: \"Friday\", value: 4},\n                  {label: \"Saturday\", value: 5},\n                  {label: \"Sunday\", value: 6},\n                ]}\n                selected={this.state.selectedDayOfWeek}\n                onChange={this.handleTabNavChange}\n              />\n              <DayMealList\n                meals={daymeals}\n                renderMissingMeal={(mealType: number) => {\n                  return <EmptyRecipeItem key={mealType} mealType={mealType} />\n                }}\n                renderMealItem={(meal: any, index: number) => {\n                  return <RecipeItem key={meal.id} data={meal} />\n                }}\n              />\n            </div>\n          </div>\n        </main>\n        <Footer copyrightText=\"Testtesttest\" />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  null\n)(StartLoggedIn);\n\ninterface DayMealListProps {\n  meals: any,\n  renderMealItem: any,\n  renderMissingMeal: any,\n}\n\nconst DayMealList = (props: DayMealListProps) => {\n  const meals = props.meals || [];\n\n  const mealsByType = meals.reduce((acc:any, daymeal:any) => {\n    let mealsByType = acc[daymeal.meal_type] || [];\n    mealsByType = [...mealsByType, daymeal];\n    acc[daymeal.meal_type]= mealsByType;\n    return acc;\n  }, new Array(3).fill(\n    []\n  ))\n\n  return (\n    <div className=\"daymeallist\">\n      {mealsByType.map((items:any, mealType:number) => {\n        if (!items.length) return props.renderMissingMeal(mealType)\n        return items.map((item:any) => props.renderMealItem(item))\n      })};\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./Card.css\";\n\nexport interface CardProps {\n  content: string;\n  image: string;\n  alt: string;\n}\n\nexport const Card = (props: CardProps) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={props.image} alt={props.alt} />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"content\">{props.content}</div>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nexport interface ModalProps {\n  text: string;\n  onClose: Function;\n}\n\nclass Modal extends React.Component<ModalProps> {\n  handleClick = (event: any) => {\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <div className={`is-active modal`}>\n        <div className=\"modal-background\" />\n        <div className=\"modal-content\">\n          <section className=\"modal-card-body\">\n            <h1>{this.props.text}</h1>\n            <button\n              className=\"button is-success is-large\"\n              onClick={this.handleClick}\n            >\n              Ok\n            </button>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { iRootState, Dispatch } from \"../../store\";\nimport { Link } from \"react-router-dom\";\nimport { HeaderLoggedOut } from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { Card } from \"../../components/Card/Card\";\nimport Modal from \"../../components/Modal/Modal\";\nimport \"./StartLoggedOut.css\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setToken: dispatch.user.setToken\n});\n\ninterface StartLoggedOutProps {\n  location: any;\n}\n\ninterface StartLoggedOutState {\n  modelIsOpen: boolean,\n}\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch> &\n  StartLoggedOutProps;\ntype Props = connectedProps;\n\n\nclass StartLoggedOut extends Component<Props, StartLoggedOutState> {\n  state = {\n    modelIsOpen: true,\n  }\n\n  handleLoggedOutModalClose = () => {\n    this.setState({ modelIsOpen: false });\n  }\n\n  render() {\n    const { location } = this.props;\n    const locationState = location.state || {};\n\n    if (this.props.isLoggedIn) {\n      return <Redirect to={\"/welcome\"} />;\n    }\n\n    return (\n      <div className=\"StartLoggedOut\">\n        <HeaderLoggedOut />\n        <main>\n          <section className=\"start__container--img\">\n            <div className=\"container\">\n              <div className=\"columns\">\n                <div className=\"column is-two-fifths\">\n                  <div className=\"start__card--main card\">\n                    <div className=\"start__card--text card-content\">\n                      <h2 className=\"start__card--title\">\n                        Planera dina matvanor\n                      </h2>\n                      <div className=\"start__card--description\">\n                        Ät det du vill när du vill, gör din vardag enkel med\n                        Receptplaneraren.\n                      </div>\n                      <Link to={`/welcome`}>\n                        <button className=\"start__card--button button\">\n                          Gå med nu\n                        </button>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"column\" />\n                <div className=\"column\" />\n              </div>\n            </div>\n          </section>\n\n          <section className=\"start__container--bg\">\n            <div className=\"container\">\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <Card\n                    image=\"/images/hermes-rivera-258743-unsplash.jpg\"\n                    content=\"Nulla condimentum orci dignissim ante volutpat feugiat.\n                    Phasellus sit amet viverra risus, non faucibus ligula.\n                    Fusce vel aliquet neque. Fusce libero justo,\n                    hendrerit id mollis vitae, pellentesque in nisi.\n                    Proin posuere egestas orci eget lobortis. Nunc risus est,\n                    venenatis lobortis nisl at, sodales egestas mi.\n                    Curabitur efficitur vehicula rhoncus.\"\n                    alt=\"Placeholder image\"\n                  />\n                </div>\n\n                <div className=\"column\">\n                  <Card\n                    image=\"/images/keenan-loo-27635-unsplash.jpg\"\n                    content=\"Nulla condimentum orci dignissim ante volutpat feugiat.\n                    Phasellus sit amet viverra risus, non faucibus ligula.\n                    Fusce vel aliquet neque. Fusce libero justo,\n                    hendrerit id mollis vitae, pellentesque in nisi.\n                    Proin posuere egestas orci eget lobortis. Nunc risus est,\n                    venenatis lobortis nisl at, sodales egestas mi.\n                    Curabitur efficitur vehicula rhoncus.\"\n                    alt=\"Placeholder image\"\n                  />\n                </div>\n\n                <div className=\"column\">\n                  <Card\n                    image=\"/images/luisa-schetinger-1164948-unsplash.jpg\"\n                    content=\"Nulla condimentum orci dignissim ante volutpat feugiat.\n                    Phasellus sit amet viverra risus, non faucibus ligula.\n                    Fusce vel aliquet neque. Fusce libero justo,\n                    hendrerit id mollis vitae, pellentesque in nisi.\n                    Proin posuere egestas orci eget lobortis. Nunc risus est,\n                    venenatis lobortis nisl at, sodales egestas mi.\n                    Curabitur efficitur vehicula rhoncus.\"\n                    alt=\"Placeholder image\"\n                  />\n                </div>\n              </div>\n            </div>\n          </section>\n        </main>\n        <Footer copyrightText=\"Copyright 2019. Informational text.\" />\n\n        {(locationState.showLogOutModal && this.state.modelIsOpen) && (\n          <Modal text=\"You have been logged out.\" onClose={this.handleLoggedOutModalClose} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(StartLoggedOut);\n","import React from \"react\";\nimport { FormikErrors } from \"formik\"; \n\nexport interface InputProps {\n  type: string;\n  className: string;\n  name: string;\n  placeholder: string;\n  value: string;\n  onChange: any;\n  onBlur: any;\n  error: string | FormikErrors<any>;\n}\n\nconst Input = (props: InputProps) => (\n  <React.Fragment>\n    <div className=\"field\">\n      <div className=\"control has-icons-left has-icons-right\">\n        <input\n          className={`${props.className} input`}\n          type={props.type}\n          placeholder={props.placeholder}\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n        />\n        <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-envelope\" />\n        </span>\n        <span className=\"icon is-small is-right\">\n          <i className=\"fas fa-check\" />\n        </span>\n      </div>\n      {props.error && <p className=\"help is-danger\">{props.error}</p>}\n    </div>\n  </React.Fragment>\n);\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"../Input/Input\";\nimport \"./LoginForm.css\";\n\nexport interface LoginFormState {\n  email: string;\n  password: string;\n}\n\ninterface FormValues {\n  email: string;\n  password: string;\n  general: string;\n}\n\nexport interface OnSubmitValues {\n  email: string;\n  password: string;\n}\n\nexport interface LoginFormProps {\n  onSubmit: (data: OnSubmitValues, actions: FormikActions<FormValues>) => void\n}\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"E-mail is not valid!\")\n    .required(\"E-mail is required!\"),\n  password: Yup.string()\n    .min(6, \"Password has to be longer than 6 characters!\")\n    .required(\"Password is required!\")\n});\n\nclass LoginForm extends Component<LoginFormProps, LoginFormState> {\n  render() {\n    const onSubmit = this.props.onSubmit;\n    let initialValues = {\n      email: \"\",\n      password: \"\",\n      general: \"\"\n    };\n    return (\n      <div className=\"LoginForm\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(\n            values: FormValues,\n            actions: FormikActions<FormValues>\n          ) => {\n            onSubmit(\n              {\n                password: values.password,\n                email: values.email\n              },\n              actions\n            );\n          }}\n          render={(formikBag: FormikProps<FormValues>) => (\n            <Form>\n              {formikBag.errors.general && <p>{formikBag.errors.general}</p>}\n\n              <Input\n                name=\"email\"\n                className=\"\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formikBag.values.email}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.email ? formikBag.errors.email || \"\" : \"\"\n                }\n              />\n\n              <Input\n                name=\"password\"\n                className=\"\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={formikBag.values.password}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.password\n                    ? formikBag.errors.password || \"\"\n                    : \"\"\n                }\n              />\n\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button\n                    className=\"button\"\n                    type=\"submit\"\n                    disabled={!formikBag.isValid}\n                  >\n                    Log In\n                  </button>\n                </p>\n              </div>\n            </Form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { iRootState, Dispatch } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport { FormikActions } from \"formik\";\nimport { iApi } from \"../../services/Api\";\n\nimport LoginForm, { OnSubmitValues } from \"../../components/LoginForm/LoginForm\";\nimport \"./LogIn.css\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setToken: dispatch.user.setToken\n});\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>;\ntype LogInProps = connectedProps & { api: iApi }\n\nclass LogIn extends Component<LogInProps> {\n  handleSubmit = async (values: OnSubmitValues, actions: FormikActions<any>) => {\n    const { api } = this.props\n\n    actions.setSubmitting(true);\n\n    const response: ApiResponse<any> = await api.logIn({\n      email: values.email,\n      password: values.password\n    });\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      actions.setErrors({\n        general: \"Ogiltigt användarnamn/lösenord\"\n      });\n      return;\n    }\n\n    this.props.setToken(response.data.access_token);\n  };\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to={\"/welcome\"} />;\n    }\n\n    return (\n      <div className=\"login columns\">\n        <div className=\"login__container--img column\">\n          <div className=\"login__container--left\">\n            <h2 className=\"login__brand\">Receptplaneraren</h2>\n          </div>\n        </div>\n        <div className=\"login__container--bg column\">\n          <div className=\"login__container--right\">\n            <h2 className=\"login__title\">Log In</h2>\n            <p className=\"login__info--small\">\n              Don't have an account? <Link to={`/register`}>Sign up</Link>.\n            </p>\n            <LoginForm onSubmit={this.handleSubmit} />\n            <p className=\"login__info--small\">Forgot password? <Link to={`/password/create`}>Click here.</Link></p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapDispatch,\n)(LogIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"../../store\";\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  logOut: dispatch.user.logOut\n});\n\ntype LogOutProps = ReturnType<typeof mapDispatch>;\n\nclass LogOut extends Component<LogOutProps> {\n  componentWillMount() {\n    this.props.logOut();\n  }\n\n  render() {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/\",\n          state: { showLogOutModal: true }\n        }}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatch\n)(LogOut);\n","import React, { Component } from \"react\";\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  Field,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"../Input/Input\";\nimport \"./RegisterForm.css\";\n\nexport interface RegisterFormProps {\n  onSubmit: any;\n}\nexport interface RegisterFormState {\n  user_name: string;\n  email: string;\n  password: string;\n}\n\ninterface iFormValues {\n  user_name: string;\n  email: string;\n  password: string;\n  password_confirmation: string;\n  consent: boolean;\n}\n\nconst validationSchema = Yup.object().shape({\n  user_name: Yup.string().required(\"User name is required!\"),\n  email: Yup.string()\n    .email(\"E-mail is not valid!\")\n    .required(\"E-mail is required!\"),\n  password: Yup.string()\n    .min(6, \"Password has to be longer than 6 characters!\")\n    .required(\"Password is required!\"),\n  password_confirmation: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Password confirm is required\"),\n  consent: Yup.bool()\n    .test(\n      \"consent\",\n      \"You have to agree with our Terms and Conditions!\",\n      (value: boolean) => value === true\n    )\n    .required(\"You have to agree with our Terms and Conditions!\")\n});\n\nclass RegisterForm extends Component<RegisterFormProps, RegisterFormState> {\n  render() {\n    const onSubmit = this.props.onSubmit;\n    let initialValues = {\n      email: \"\",\n      user_name: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      consent: false,\n    };\n    return (\n      <div className=\"RegisterForm\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(\n            values: iFormValues,\n            actions: FormikActions<iFormValues>\n          ) => {\n            onSubmit(\n              {\n                password: values.password,\n                email: values.email,\n                user_name: values.user_name\n              },\n              actions\n            );\n          }}\n          render={(formikBag: FormikProps<iFormValues>) => (\n            <Form>\n              <Input\n                name=\"user_name\"\n                className=\"\"\n                type=\"text\"\n                placeholder=\"User name\"\n                value={formikBag.values.user_name}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.user_name\n                    ? formikBag.errors.user_name || \"\"\n                    : \"\"\n                }\n              />\n\n              <Input\n                name=\"email\"\n                className=\"\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formikBag.values.email}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.email ? formikBag.errors.email || \"\" : \"\"\n                }\n              />\n\n              <Input\n                name=\"password\"\n                className=\"\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={formikBag.values.password}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.password\n                    ? formikBag.errors.password || \"\"\n                    : \"\"\n                }\n              />\n\n              <Input\n                name=\"password_confirmation\"\n                className=\"\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={formikBag.values.password_confirmation}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.password_confirmation\n                    ? formikBag.errors.password_confirmation || \"\"\n                    : \"\"\n                }\n              />\n\n              <div className=\"field\">\n                <div className=\"control\">\n                  <label className=\"register__text--small  checkbox\">\n                    <Field\n                      className=\"register__checkbox\"\n                      name=\"consent\"\n                      type=\"checkbox\"\n                    />\n                    I agree to the <a href=\"/terms-and-conditions\">terms and conditions</a>\n                  </label>\n                </div>\n                <p className=\"help is-success\">\n                  {formikBag.touched.consent && formikBag.errors.consent}\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button\n                    className=\"button\"\n                    type=\"submit\"\n                    disabled={!formikBag.isValid}\n                  >\n                    Sign up\n                  </button>\n                </p>\n              </div>\n            </Form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport { FormikActions } from \"formik\";\nimport { iApi } from \"../../services/Api\";\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\nimport { iRootState, Dispatch } from \"../../store\"\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null,\n})\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setToken: dispatch.user.setToken,\n})\n\ntype connectedProps = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch>\n// to include additional typings\ntype Props = connectedProps & { api: iApi}\n\nclass Register extends Component<Props> {\n   handleSubmit = async (values: any, actions: FormikActions<any>) => {\n    const { api } = this.props\n\n    actions.setSubmitting(true);\n\n    const response: ApiResponse<any> = await api.register({\n      \"user_name\": values.user_name,\n      \"email\": values.email,\n      \"password\": values.password,\n    })\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      // TODO: Add support for general errors (such as 401 etc)\n      actions.setErrors(response.data);\n      return;\n    }\n\n    this.props.setToken(response.data.access_token);\n  }\n\n  render() {\n    if (this.props.user.access_token) {\n      return <Redirect to={\"/welcome\"} />\n    }\n\n    return (\n      <div className=\"login columns\">\n        <div className=\"login__container--img column\">\n          <div className=\"login__container--left\">\n            <h2 className=\"login__brand\">Receptplaneraren</h2>\n          </div>\n        </div>\n        <div className=\"login__container--bg column\">\n          <div className=\"login__container--right\">\n            <h2 className=\"login__title\">Sign Up</h2>\n            <RegisterForm onSubmit={this.handleSubmit} />\n            <p className=\"login__info--small\">Already have an account? <Link to={`/login`}>Log in.</Link>.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapState, mapDispatch)(Register);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n} from \"formik\";\nimport { iRootState } from \"../../store\";\nimport Input from \"../../components/Input/Input\";\nimport { iApi } from \"../../services/Api\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\ntype connectedProps = ReturnType<typeof mapState>;\ntype Props = connectedProps & { api: iApi } & RouteComponentProps & FormValues & ResetPasswordProps;\n\ninterface ResetPasswordState {\n  reset_token: string;\n  email: string;\n}\ninterface ResetPasswordProps extends RouteComponentProps<MatchParams> {}\n\ninterface MatchParams {\n  token: string;\n}\n\ninterface FormValues {\n  password: string;\n  password_confirmation: string;\n  general: string;\n  message: string;\n}\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password has to be longer than 6 characters!\")\n    .required(\"Password is required!\"),\n  password_confirmation: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Password confirm is required\"),\n});\n\nclass ResetPassword extends Component<Props, ResetPasswordState> {\n  handleSubmit = async (values: any, actions: FormikActions<any>) => {\n    const { token } = this.props.match.params;\n    const { api } = this.props\n\n    actions.setSubmitting(true);\n\n    const response: ApiResponse<any> = await api.passwordReset({\n      reset_token: token,\n      password: values.password,\n    });\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      actions.setErrors({\n        general: \"Orgiltig länk\"\n      });\n      return;\n    }\n\n    actions.resetForm();\n    actions.setStatus(response.data.message);\n    return;\n  };\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to={\"/welcome\"} />;\n    }\n\n    console.log(this.state);\n\n    const onSubmit = this.handleSubmit;\n    let initialValues = {\n      password: \"\",\n      password_confirmation: \"\",\n      general: \"\",\n      message: \"\",\n    };\n\n    return (\n      <div className=\"login columns\">\n        <div className=\"login__container--img column\">\n          <div className=\"login__container--left\">\n            <h2 className=\"login__brand\">Receptplaneraren</h2>\n          </div>\n        </div>\n        <div className=\"login__container--bg column\">\n          <div className=\"login__container--right\">\n            <h2 className=\"login__title\">Reset Password</h2>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n              onSubmit={(\n                values: FormValues,\n                actions: FormikActions<FormValues>\n              ) => {\n                onSubmit(\n                  {\n                    // email: this.state.email,\n                    // reset_token: this.state.reset_token,\n                    password: values.password\n                  },\n                  actions\n                );\n              }}\n              render={(formikBag: FormikProps<FormValues>) => (\n                <Form>\n                  {formikBag.errors.general && <p>{formikBag.errors.general}</p>}\n                  {formikBag.status && <p>{formikBag.status}</p>}\n\n                  <Input\n                    name=\"password\"\n                    className=\"\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={formikBag.values.password}\n                    onChange={formikBag.handleChange}\n                    onBlur={formikBag.handleBlur}\n                    error={\n                      formikBag.touched.password ? formikBag.errors.password || \"\" : \"\"\n                    }\n                  />\n\n                  <Input\n                    name=\"password_confirmation\"\n                    className=\"\"\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    value={formikBag.values.password_confirmation}\n                    onChange={formikBag.handleChange}\n                    onBlur={formikBag.handleBlur}\n                    error={\n                      formikBag.touched.password_confirmation\n                        ? formikBag.errors.password_confirmation || \"\"\n                        : \"\"\n                    }\n                  />\n\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <button\n                        className=\"button\"\n                        type=\"submit\"\n                        disabled={!formikBag.isValid}\n                      >\n                        Update password\n                      </button>\n                    </p>\n                  </div>\n                </Form>\n              )}\n            />\n            <p className=\"login__info--small\"><Link to={`/login`}>Log in.</Link></p>\n            <p className=\"login__info--small\"><Link to={`/register`}>Sign up.</Link></p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapState,\n  null\n)(ResetPassword);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { iRootState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n} from \"formik\";\nimport Input from \"../../components/Input/Input\";\nimport * as Yup from \"yup\";\nimport { iApi } from \"../../services/Api\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\ntype connectedProps = ReturnType<typeof mapState>;\ntype Props = connectedProps & { api: iApi }\n\ninterface iFormValues {\n  email: string;\n  general: string;\n  message: string;\n}\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"E-mail is not valid!\")\n    .required(\"E-mail is required!\"),\n});\n\nclass CreateResetPassword extends Component<Props> {\n  handleSubmit = async (values: any, actions: FormikActions<any>) => {\n    const { api } = this.props\n\n    actions.setSubmitting(true);\n\n    const response: ApiResponse<any> = await api.passwordCreate({\n      email: values.email,\n    });\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      actions.setErrors({\n        general: \"Ogiltig email\"\n      });\n      return;\n    }\n\n    actions.resetForm();\n    actions.setStatus(response.data.message);\n    return;\n  };\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to={\"/welcome\"} />;\n    }\n\n    const onSubmit = this.handleSubmit;\n    let initialValues = {\n      email: \"\",\n      general: \"\",\n      message: \"\",\n    };\n\n    return (\n      <div className=\"login columns\">\n        <div className=\"login__container--img column\">\n          <div className=\"login__container--left\">\n            <h2 className=\"login__brand\">Receptplaneraren</h2>\n          </div>\n        </div>\n        <div className=\"login__container--bg column\">\n          <div className=\"login__container--right\">\n            <h2 className=\"login__title\">Create password reset</h2>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n              onSubmit={(\n                values: iFormValues,\n                actions: FormikActions<iFormValues>\n              ) => {\n                onSubmit(\n                  {\n                    email: values.email\n                  },\n                  actions\n                );\n              }}\n              render={(formikBag: FormikProps<iFormValues>) => (\n                <Form>\n                  {formikBag.errors.general && <p>{formikBag.errors.general}</p>}\n                  {formikBag.status && <p>{formikBag.status}</p>}\n                  <Input\n                    name=\"email\"\n                    className=\"\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={formikBag.values.email}\n                    onChange={formikBag.handleChange}\n                    onBlur={formikBag.handleBlur}\n                    error={\n                      formikBag.touched.email ? formikBag.errors.email || \"\" : \"\"\n                    }\n                  />\n\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <button\n                        className=\"button\"\n                        type=\"submit\"\n                        disabled={!formikBag.isValid}\n                      >\n                        Reset password\n                      </button>\n                    </p>\n                  </div>\n                </Form>\n              )}\n            />\n            <p className=\"login__info--small\"><Link to={`/login`}>Log in.</Link></p>\n            <p className=\"login__info--small\"><Link to={`/register`}>Sign up.</Link></p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapState,\n  null\n)(CreateResetPassword);\n","import React, { FormEvent } from \"react\";\nimport \"./RecipeTags.css\";\n\nexport interface RecipeTagProps {\n  tags: iRecipeTag[];\n  selectedTags: Number[];\n  onToggleTag: any;\n}\n\nexport interface iRecipeTag {\n  name: string;\n  id: number;\n}\n\nexport const RecipeTags = (props: RecipeTagProps) => {\n  const handleOnClick = (e: FormEvent, tag: iRecipeTag) => {\n    e.preventDefault();\n\n    props.onToggleTag(tag);\n  }\n\n  return (\n    <div className=\"RecipeTags\">\n      {props.tags.map(tag => {\n        const isSelected = props.selectedTags.includes(tag.id);\n\n        return (\n          <button\n            className={isSelected ? \"button selected\" : \"button not-selected\"}\n            onClick={e => handleOnClick(e, tag)}\n            key={tag.id\n          }>{tag.name}</button>\n        )\n      })}\n    </div>\n  )\n}\n","import React from \"react\";\n// import * as uz from 'unitz-ts';\nimport \"./IngredientsInput.css\";\n\nexport interface IngredientsInputProps {\n  index: number,\n  amount?: number,\n  measurement?: string,\n  ingredient: string,\n  onChange: Function,\n  onDelete: Function,\n}\n\n// uz.Classes.addDefaults();\n\n// TODO: volume = 0, mass = 1, piece = 2\nconst MEASUREMENT_LIST: {label: String, type: Number}[] = [\n  {label: 'ml', type: 0},\n  {label: 'l', type: 0},\n  {label: 'tbs', type: 0},\n  {label: 'fl-oz', type: 0},\n  {label: 'cup', type: 0},\n  {label: 'pnt', type: 0},\n  {label: 'qt', type: 0},\n  {label: 'gal', type: 0},\n  {label: 'mg', type: 1},\n  {label: 'g', type: 1},\n  {label: 'kg', type: 1},\n  {label: 'oz', type: 1},\n  {label: 'lb', type: 1},\n  {label: 'piece', type: 2},\n];\n\nconst IngredientsInput = (props: IngredientsInputProps) => {\n\n  const handleDelete = (e: React.FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    props.onDelete(props.index);\n  }\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { onChange, ...ingredient } = props\n\n    props.onChange(props.index, {\n      ...ingredient,\n      [e.currentTarget.name]: e.currentTarget.value,\n    })\n  }\n\n  return (\n    <div className=\"field has-addons\">\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          name=\"amount\"\n          className=\"IngredientsInput__Amount input\"\n          placeholder=\"Amount\"\n          value={props.amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"control\">\n        <div className=\"IngredientsInput__Measure select\">\n          <select name=\"measurement\" value={props.measurement || undefined} className=\"IngredientsInput__Select\" onChange={handleChange}>\n            {MEASUREMENT_LIST.map((x, index) =>\n              <option key={index}>{x.label}</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"control is-expanded\">\n        <input\n         type=\"text\"\n          className=\"IngredientsInput__Ingredient input\"\n          name=\"ingredient\"\n          placeholder=\"Ingredient\"\n          value={props.ingredient}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"control\">\n        <button onClick={handleDelete} className=\"button is-danger\">\n          Delete\n        </button>\n      </div>\n\n    </div>\n  )\n};\n\nexport default IngredientsInput;\n","\nimport React, { FormEvent } from \"react\";\nimport IngredientsInput from '../IngredientsInput/IngredientsInput';\nimport { iIngredient } from '../RecipeEditForm/RecipeEditForm';\n// TODO: Add render prop\n\ninterface InputListProps {\n  items: iIngredient[],\n  onChange: any,\n}\n\nexport const emptyIngredient: iIngredient = {\n  amount: 0,\n  measurement: \"\",\n  ingredient: \"\",\n}\n\nconst InputList = (props: InputListProps) => {\n  const handleChange = (index: number, item: any) => {\n    const items = [\n      ...props.items.slice(0, index),\n      item,\n      ...props.items.slice(index+1),\n    ];\n\n    props.onChange(items);\n  }\n\n  const handleAddItem = (e: FormEvent) => {\n    e.preventDefault();\n\n    props.onChange([\n      ...props.items,\n      emptyIngredient,\n    ]);\n  }\n\n  const handleDelete = (index: number) => {\n    console.log('delete');\n    const items = [\n      ...props.items.slice(0, index),\n      ...props.items.slice(index+1),\n    ];\n\n    props.onChange(items);\n  }\n\n  return (\n    <div>\n      <div>\n        {props.items.map((x, index) =>\n          <IngredientsInput\n            {...x}\n            key={index}\n            index={index}\n            onChange={handleChange}\n            onDelete={handleDelete}\n          />)}\n      </div>\n\n      <div className=\"field\">\n        <p className=\"control\">\n          <button\n            className=\"button\" onClick={handleAddItem}\n          >\n            Add row +\n          </button>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default InputList;\n","import React, { Component, FormEvent } from \"react\";\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  Field,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"../Input/Input\";\nimport { emptyIngredient } from '../InputList/InputList';\nimport InputList from '../InputList/InputList';\nimport \"./RecipeForm.css\";\n\nexport interface RecipeFormProps {\n  onSubmit: Function,\n}\n\nexport interface RecipeFormState {\n  title: string;\n  image: string;\n  instructions: string;\n  ingredients: iIngredient[];\n}\n\ninterface iFormValues {\n  title: string;\n  image: string;\n  instructions: string;\n  ingredients: iIngredient[];\n}\n\nexport interface iIngredient {\n  amount: number;\n  measurement: string;\n  ingredient: string;\n}\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Title is required!\"),\n  //image: Yup.string()\n  //  .required(\"Image is not? required!\"),\n  instructions: Yup.string()\n    .required(\"Instructions is required!\"),\n  ingredients: Yup.array()\n    .required(\"Ingredients are required!\"),\n});\n\ninterface InputListProps {\n  items: iIngredient[],\n  onChange: any,\n}\n\nclass RecipeForm extends Component<RecipeFormProps, RecipeFormState> {\n\n  constructor(props: RecipeFormProps) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      image: \"https://bulma.io/images/placeholders/128x128.png\",\n      instructions: \"\",\n      ingredients: [emptyIngredient],\n    }\n  }\n\n  handleAddItem = (e: FormEvent) => {\n    e.preventDefault();\n\n    let { ingredients } = this.state\n\n    ingredients = [\n      ...ingredients,\n      {\n        amount: 0,\n        measurement: \"\",\n        ingredient: \"\",\n      },\n    ];\n\n    this.setState({ ingredients });\n  }\n\n  handleIngredientChange = (ingredients: []) => {\n    this.setState({ ingredients })\n  }\n\n  handleInputFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n    const fileList = e.target.files || [];\n\n    if (fileList.length > 0) {\n      let file: File = fileList[0];\n      const reader = new FileReader();\n      reader.onload = (e: Event) => {\n        if (typeof reader.result === 'string') {\n          this.setState({ image: reader.result })\n        }\n      }\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  render() {\n    const onSubmit = this.props.onSubmit;\n    let initialValues = {\n      title: \"\",\n      image: \"\",\n      instructions: \"\",\n      ingredients: [emptyIngredient],\n    };\n\n    return (\n      <div className=\"RecipeForm\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(\n            values: iFormValues,\n            actions: FormikActions<iFormValues>\n          ) => {\n            console.log(\"onSubmit!\");\n            onSubmit(\n              {\n                title: values.title,\n                image: this.state.image,\n                instructions: values.instructions,\n                ingredients: values.ingredients,\n              },\n              actions\n            );\n          }}\n          render={(formikBag: FormikProps<iFormValues>) => (\n            <Form>\n              {/* {formikBag.errors.general && <p>{formikBag.errors.general}</p>} */}\n              <div className=\"columns\">\n                <div className=\"column\">\n                <figure className=\"image is-128x128\">\n                  <img id=\"imagePreview\" src={this.state.image} alt=\"\" />\n                </figure>\n                </div>\n                <div className=\"column\">\n                  <div className=\"file is-boxed\">\n                    <label className=\"file-label\">\n                      <input className=\"file-input\" type=\"file\" name=\"resume\"\n                        onChange={this.handleInputFileChange}\n                        accept='image/*'\n                      />\n                      <span className=\"file-cta\">\n                        <span className=\"file-icon\">\n                          <i className=\"fas fa-upload\"></i>\n                        </span>\n                        <span className=\"file-label\">\n                          Choose an image…\n                        </span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                {formikBag.errors.image\n                  && <p className=\"help is-danger\">{formikBag.errors.image}</p>\n                }\n              </div>\n\n\n              <label>Title</label>\n              <Input\n                name=\"title\"\n                className=\"\"\n                type=\"text\"\n                placeholder=\"Title\"\n                value={formikBag.values.title}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.title ? formikBag.errors.title || \"\" : \"\"\n                }\n              />\n\n              <label>Ingredients</label>\n              <InputList\n                items={formikBag.values.ingredients}\n                onChange={(ingredients: []) => formikBag.setFieldValue(\"ingredients\", ingredients)}\n              />\n              {formikBag.errors.ingredients\n                && <p className=\"help is-danger\">{formikBag.errors.ingredients}</p>\n              }\n\n              <div className=\"control\">\n                <label>Instructions</label>\n                <Field\n                  component=\"textarea\"\n                  className=\"textarea\"\n                  name=\"instructions\"\n                  value={formikBag.values.instructions}\n                  onChange={formikBag.handleChange}\n                  onBlur={formikBag.handleBlur}\n                  error={\n                    formikBag.touched.instructions ? formikBag.errors.instructions || \"\" : \"\"\n                  }\n                  placeholder=\"Instructions\">\n                </Field>\n                {formikBag.errors.instructions\n                  && <p className=\"help is-danger\">{formikBag.errors.instructions}</p>\n                }\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button\n                    className=\"button\"\n                    type=\"submit\"\n                    // disabled={!formikBag.isValid}\n                  >\n                    Create\n                  </button>\n                </p>\n              </div>\n              <button className=\"button\" disabled>Preview</button>\n            </Form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RecipeForm;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport { FormikActions } from \"formik\";\nimport { iRootState, Dispatch } from \"../../store\";\nimport { iApi } from \"../../services/Api\";\nimport { HeaderLoggedIn } from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { RecipeTags, iRecipeTag } from \"../../components/RecipeTags/RecipeTags\";\nimport RecipeForm from \"../../components/RecipeForm/RecipeForm\";\nimport \"./CreateRecipe.css\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n\n});\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>;\ntype Props = connectedProps & { api: iApi }\n\ninterface CreateRecipeState {\n  tags: any[];\n  selectedTags: Number[];\n}\n\nclass CreateRecipe extends Component<Props, CreateRecipeState> {\n  state: CreateRecipeState = {\n    tags: [],\n    selectedTags: [],\n  }\n\n  async componentDidMount () {\n    const { api } = this.props\n    const response: ApiResponse<any> = await api.recipeTags(this.props.user.access_token);\n    this.setState({ tags: response.data })\n\n    if (!response.ok) {\n        console.log(\"TAG ERRORRR\")\n      return;\n    }\n  }\n\n  handleSubmit = async (values: any, actions: FormikActions<any>) => {\n\n    console.log('CreateRecipe.handleSubmit');\n    console.log(values);\n\n    const { api } = this.props\n\n    actions.setSubmitting(true);\n\n    const response: ApiResponse<any> = await api.recipeCreate({\n      instructions: values.instructions,\n      title: values.title,\n      tags: this.state.selectedTags,\n    }, this.props.user.access_token);\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      actions.setErrors({\n        general: \"Fel, kunde inte spara recept\"\n      });\n      return;\n    }\n\n    //\n\n    actions.setSubmitting(true);\n\n    const recipe_id = response.data.recipe.id;\n\n    await api.recipeIngredientCreate({\n      ingredients: values.ingredients,\n      recipe_id: recipe_id,\n    }, this.props.user.access_token);\n\n    const imageResponse: ApiResponse<any> = await api.recipeImage({\n      image: values.image,\n      recipe_id: recipe_id,\n    }, this.props.user.access_token);\n\n    actions.setSubmitting(false);\n\n    if (!imageResponse.ok) {\n      actions.setErrors({\n        general: \"Fel, kunde inte spara bild\"\n      });\n      return;\n    }\n  };\n\n  handleToggleTag = (tag: iRecipeTag) => {\n    let { selectedTags } = this.state\n\n    if (selectedTags.includes(tag.id)) {\n      selectedTags = selectedTags.filter(x => x !== tag.id)\n    } else {\n      selectedTags = [tag.id, ...selectedTags]\n    }\n\n    this.setState({ selectedTags });\n  }\n\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return <Redirect to={\"/\"} />;\n    }\n\n    return (\n      <div className=\"CreateRecipe\">\n        <HeaderLoggedIn />\n        <main className=\"container\">\n          <div className=\"CreateRecipe__Container columns\">\n            <div className=\"CreateRecipe__Container--Left column is-two-fifths\">\n              Create Recipe and tabs\n              <RecipeTags\n                tags={this.state.tags}\n                selectedTags={this.state.selectedTags}\n                onToggleTag={this.handleToggleTag}\n              />\n            </div>\n            <div className=\"CreateRecipe__Container--Right column\">\n              <RecipeForm onSubmit={this.handleSubmit} />\n            </div>\n          </div>\n        </main>\n        <Footer copyrightText=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(CreateRecipe);\n","import React from \"react\";\n\nexport interface SelectProps {\n  options: string[],\n  name: string,\n  value: string,\n  onChange: any,\n  onBlur: any,\n  // error: string | FormikErrors<any>,\n}\n\nconst Select = (props: SelectProps) => (\n  <div className=\"field\">\n    <div className=\"select\">\n      <select className=\"select\"\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n      >\n      {props.options.map((item, index) =>\n        <option key={index}>{item}</option>\n      )}\n      </select>\n    </div>\n    {/* {props.error && <p className=\"help is-danger\">{props.error}</p>} */}\n  </div>\n);\n\nexport default Select;\n","import React from \"react\";\nimport * as moment from 'moment';\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from \"../../components/Select/Select\";\nimport { iRootState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport Api from \"../../services/Api\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\ntype connectedProps = ReturnType<typeof mapState>;\ntype Props = connectedProps & AddDayMealModalProps;\n\ninterface AddDayMealModalProps {\n  text: string,\n  onClose: Function,\n  recipe: iRecipe,\n}\n\ninterface iRecipe {\n  id: number,\n}\n\ninterface AddDayMealModalState {\n  weekList: number[],\n  dayList: string[],\n  currentWeek: number,\n  currentDay: string,\n  mealList: any[],\n  currentMeal: string,\n}\n\ninterface iFormValues {\n  week: any,\n  day: string,\n  meal: string,\n}\n\nconst validationSchema = Yup.object().shape({\n  week: Yup.number()\n    .required(\"Week is required!\"),\n  day: Yup.string()\n    .required(\"Day is required!\"),\n  meal: Yup.string()\n    .required(\"Meal type is required!\"),\n});\n\nclass AddDayMealModal extends React.Component<Props, AddDayMealModalState> {\n  state = {\n    weekList: [],\n    dayList: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n    currentWeek: moment.default().isoWeek(),\n    currentDay: moment.default().isoWeekday(moment.default().isoWeekday()).format('dddd'),\n    mealList: ['Breakfast', 'Lunch', 'Dinner'],\n    currentMeal: 'Breakfast',\n  }\n\n  handleSubmit = async (values: any, actions: FormikActions<any>) => {\n    console.log('AddDayMealModal.handleSubmit');\n    console.log(values);\n    const api = Api.create();\n\n    actions.setSubmitting(true);\n\n    // FIXME: fixa så isoweckor används... UTC???\n    // const isoWeek = moment.default().isoWeek();\n    const date = moment.default().day(values.day).week(values.week).format('YYYY-MM-DD HH:mm:ss');\n    let meal_type;\n\n    switch (values.meal) {\n      case 'Breakfast':\n        meal_type = 0;\n        break;\n\n      case 'Lunch':\n        meal_type = 1;\n        break;\n\n      case 'Dinner':\n        meal_type = 2;\n        break;\n\n      default:\n        meal_type= 0;\n        break;\n    }\n    const recipe_id = this.props.recipe.id;\n    console.log(date);\n    console.log(meal_type);\n    console.log(recipe_id);\n\n    const response: ApiResponse<any> = await api.daymealUpdate({\n      date: date,\n      meal_type: meal_type,\n      recipe_id : recipe_id,\n    }, this.props.user.access_token);\n\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      actions.setErrors({\n        general: \"Could not save day meal\"\n      });\n      return;\n    }\n\n    this.props.onClose();\n  }\n\n  handleClick = (event: any) => {\n    const { onClose } = this.props\n    onClose();\n  };\n\n  componentDidMount () {\n    const weeksInYear: number = moment.default().isoWeeksInYear();\n    let allWeeks: number[] = [];\n    for (let i=1; i<=weeksInYear; i++) {\n      allWeeks = [...allWeeks, i]\n    }\n    this.setState({ weekList: allWeeks });\n  }\n// FIXME: remove touched validation\n  render() {\n    const onSubmit = this.handleSubmit;\n\n    let initialValues = {\n      week: this.state.currentWeek,\n      day: this.state.currentDay,\n      meal: this.state.currentMeal,\n    };\n// TODO: lägg in error visning\n    return (\n      <div className={`is-active modal`}>\n        <div className=\"modal-background\" />\n        <div className=\"modal-content\">\n          <section className=\"modal-card-body\">\n\n\n            <Formik\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n              onSubmit={(\n                values: iFormValues,\n                actions: FormikActions<iFormValues>\n              ) => {\n                onSubmit(\n                  {\n                    week: values.week,\n                    day: values.day,\n                    meal: values.meal,\n                  },\n                  actions\n                );\n              }}\n              render={(formikBag: FormikProps<iFormValues>) => (\n                <Form>\n                  <h1>{this.props.text}</h1>\n                  <Select name=\"week\" options={this.state.weekList}\n                    value={formikBag.values.week}\n                    onChange={formikBag.handleChange}\n                    onBlur={formikBag.handleBlur}\n                    // error={\n                    //   formikBag.touched.week ? formikBag.errors.week || \"\" : \"\"\n                    // }\n                  />\n                  {formikBag.errors.week\n                    && <p className=\"help is-danger\">{formikBag.errors.week}</p>\n                  }\n                  <Select\n                    name=\"day\"\n                    options={this.state.dayList}\n                    value={formikBag.values.day}\n                    onChange={formikBag.handleChange}\n                    onBlur={formikBag.handleBlur}\n                    // error={\n                    //   formikBag.touched.day ? formikBag.errors.day || \"\" : \"\"\n                    // }\n                  />\n                  {formikBag.errors.day\n                    && <p className=\"help is-danger\">{formikBag.errors.day}</p>\n                  }\n                  <Select\n                    name=\"meal\"\n                    options={this.state.mealList}\n                    value={formikBag.values.meal}\n                    onChange={formikBag.handleChange}\n                    onBlur={formikBag.handleBlur}\n                    // error={\n                    //   formikBag.touched.meal ? formikBag.errors.meal || \"\" : \"\"\n                    // }\n                  />\n                  {formikBag.errors.meal\n                    && <p className=\"help is-danger\">{formikBag.errors.meal}</p>\n                  }\n\n                  <button\n                    className=\"button is-info\"\n                    onClick={this.handleClick}\n                  >\n                    Close\n                  </button>\n                  <button\n                    className=\"button is-success\"\n                    type=\"submit\"\n                    // disabled={!formikBag.isValid}\n                  >\n                    Add\n                  </button>\n                </Form>\n              )}\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  null\n)(AddDayMealModal);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { iRootState, Dispatch } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport { iApi } from \"../../services/Api\";\nimport { HeaderLoggedIn } from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport AddDayMealModal from \"../../components/AddDayMealModal/AddDayMealModal\";\nimport { getEnv } from \"../../config\";\nimport \"./BrowseRecipes.css\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n\n});\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>;\ntype Props = connectedProps & { api: iApi }\n\ninterface RecipeListItemProps {\n  key: number,\n  recipe: iRecipe,\n  onOpenModal: any,\n}\n\ninterface iRecipe {\n  instructions: string,\n  title: string,\n  image: string,\n  slug: string,\n  tags: number[],\n  id: number,\n}\n\ninterface BrowseRecipesState {\n  recipes: iRecipe[],\n  tags: any,\n  selectedTags: any,\n  modalIsOpen: boolean,\n  clickedRecipe: iRecipe,\n}\n\nconst RecipeListItem = (props: RecipeListItemProps) => {\n  const handleClick = () => {\n    props.onOpenModal(props.recipe);\n  }\n\n  return (\n    <div className=\"level\">\n      <div className=\"level-left\">\n        <div className=\"RecipeListItem content\">\n            <h2 className=\"levelHeader\">{props.recipe.title}</h2>\n            <p className=\"levelContent\">{props.recipe.instructions}</p>\n            <Link className=\"levelLink\" to={`/recipe/detail/${props.recipe.slug}`}>Read more</Link>\n            <button className=\"levelLink\" onClick={handleClick}>Add to week</button>\n        </div>\n      </div>\n\n      <div className=\"level-right\">\n        <figure className=\"level-item image is-128x128\">\n          <img\n            alt=\"\"\n            src={getEnv('IMAGE_PREFIX')+props.recipe.image || getEnv('FALLBACK_IMAGE')} />\n        </figure>\n      </div>\n      <hr className=\"levelHr\"/>\n    </div>\n  )\n}\n\nclass BrowseRecipes extends Component<Props> {\n  state: BrowseRecipesState = {\n    tags: [],\n    selectedTags: [],\n    recipes: [],\n    modalIsOpen: false,\n    clickedRecipe: {\n      instructions: '',\n      title: '',\n      image: '',\n      slug: '',\n      tags: [],\n      id: 0,\n    },\n  }\n\n  async componentDidMount () {\n    // TODO: Get all recipes with tags (belonging to user?)\n    const { api } = this.props\n    const response: ApiResponse<any> = await api.recipeTags(\n      this.props.user.access_token\n    );\n    this.setState({ tags: response.data })\n\n    if (!response.ok) {\n        console.log(\"TAG ERRORRR\")\n      return;\n    }\n\n    const recipesResponse: ApiResponse<any> = await api.recipesAllInfo(\n      this.props.user.access_token\n    );\n    console.log(recipesResponse);\n    this.setState({ recipes: recipesResponse.data.recipes })\n\n    if (!response.ok) {\n      console.log(\"RECIPE ERRORRR\")\n      return;\n    }\n  }\n\n  handleOpenModal = (recipe: iRecipe) => {\n    this.setState({ modalIsOpen: true });\n    this.setState({ clickedRecipe: recipe });\n  }\n\n  handleModalClose = () => {\n    this.setState({ modalIsOpen: false });\n\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return <Redirect to={\"/\"} />;\n    }\n\n    return (\n      <div className=\"BrowseRecipes\">\n        <HeaderLoggedIn />\n        <main className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-two-fifths\">\n              Bläddra bland recept.\n              Taggar för filtrering.\n            </div>\n            <div className=\"column\">\n              <div className=\"level\">\n                <div className=\"level-left\">\n                </div>\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <div className=\"field has-addons\">\n                      <p className=\"control\">\n                        <input className=\"input\" type=\"text\" placeholder=\"Find a post\" />\n                      </p>\n                      <p className=\"control\">\n                        <button className=\"button\">\n                          Search\n                        </button>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.recipes.map((recipe: iRecipe, index: any) => (\n                <RecipeListItem key={index} recipe={recipe} onOpenModal={this.handleOpenModal} />))}\n            </div>\n          </div>\n        </main>\n        <Footer copyrightText=\"\" />\n        {this.state.modalIsOpen && (\n          <AddDayMealModal\n            text=\"Add meal to weekly plan\"\n            recipe={this.state.clickedRecipe}\n            // onSubmit={this.handleAddRecipe}\n            onClose={this.handleModalClose} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(BrowseRecipes);\n","import React, { Component, FormEvent } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport { iRootState, Dispatch } from \"../../store\";\nimport { iApi } from \"../../services/Api\";\nimport { HeaderLoggedIn } from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport AddDayMealModal from \"../../components/AddDayMealModal/AddDayMealModal\";\nimport { getEnv } from \"../../config\";\nimport \"./RecipeDetail.css\";\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n\n});\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>;\ntype Props = connectedProps & { api: iApi }\n\ninterface RecipeDetailState {\n  recipe: iRecipe,\n  slug: string,\n  isDeleted: boolean,\n  modalIsOpen: boolean,\n}\n\nexport interface iRecipe {\n  instructions: string,\n  title: string,\n  image: string,\n  id: number,\n  recipe_tags: iRecipeTag[],\n  recipe_ingredients: iRecipeIngredient[],\n}\n\ninterface iRecipeTag {\n  id: number,\n  name: string,\n}\n\ninterface iRecipeIngredient {\n  amount: number,\n  measurement: string,\n  ingredient: { name: string },\n}\n\nclass RecipeDetail extends Component<Props> {\n  state: RecipeDetailState = {\n    recipe: {\n      instructions: '',\n      title: '',\n      image: '',\n      id: 0,\n      recipe_tags: [],\n      recipe_ingredients: [],\n     },\n     slug: '',\n     isDeleted: false,\n     modalIsOpen: false,\n  }\n\n  async componentDidMount () {\n    const url = window.location.pathname;\n    const slug = url.substr(url.lastIndexOf('/') + 1);\n    const { api } = this.props;\n\n    const response: ApiResponse<any> = await api.recipeBySlug(this.props.user.access_token, slug);\n    this.setState({ recipe: response.data.recipe, slug: slug })\n\n    if (!response.ok) {\n      console.log(\"RECIPE ERRORRR\")\n    return;\n    }\n  }\n\n  handleDeleteRecipe = async (e: FormEvent) => {\n    e.preventDefault();\n    const { api } = this.props;\n    const recipeId = this.state.recipe.id;\n    const response: ApiResponse<any> = await api.recipeDelete(recipeId, this.props.user.access_token);\n    if (!response.ok) {\n      console.log(\"DELETE ERRORRR\")\n      return;\n    }\n    this.setState({ isDeleted: true });\n  }\n\n  handleOpenModal = () => {\n    this.setState({ modalIsOpen: true });\n  }\n\n  handleModalClose = () => {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return <Redirect to={\"/\"} />;\n    }\n\n    if (this.state.isDeleted) {\n      return <Redirect to='/recipe/browse' />;\n    }\n\n    return (\n      <div className=\"RecipeDetail\">\n        <HeaderLoggedIn />\n        <main className=\"container content\">\n          <div className=\"colums RecipeDetail__Container--Top\">\n          <button onClick={this.handleDeleteRecipe} className=\"button\">Delete</button>\n          <Link to={`/recipe/edit/${this.state.slug}`} >\n            <button className=\"button\">Edit</button>\n          </Link>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-one-third RecipeDetail__Container--Side\">\n              <h1>{this.state.recipe.title}</h1>\n\n              {this.state.recipe.recipe_tags.map((recipeTag: iRecipeTag, index: any) => (\n                  <button className=\"button\" key={index}>\n                    {recipeTag.name}\n                  </button>\n                ))}\n            </div>\n            <div className=\"column RecipeDetail__Container--Main\">\n              <div className=\"columns\">\n                <div className=\"column RecipeDetail__Container--Ingredients\">\n                  <h2>Ingredients</h2>\n                  <ul>\n                    {this.state.recipe.recipe_ingredients.map((recipeIngredient: iRecipeIngredient, index: any) => (\n                      <li key={index}>\n                        {recipeIngredient.amount} {recipeIngredient.measurement} {recipeIngredient.ingredient.name}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"column RecipeDetail__Container--Image\">\n                  <img\n                    className=\"image is-1by1 RecipeDetail__Image\"\n                    src={getEnv('IMAGE_PREFIX')+this.state.recipe.image || getEnv('FALLBACK_IMAGE')}\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n              <h2>Instructions</h2>\n              <p>{this.state.recipe.instructions}</p>\n            </div>\n          </div>\n          <div className=\"colums RecipeDetail__Container--Bottom\">\n            <button onClick={this.handleOpenModal} className=\"button\">Add to week</button>\n          </div>\n        </main>\n        <Footer copyrightText=\"\" />\n        {this.state.modalIsOpen && (\n          <AddDayMealModal\n            text=\"Add meal to weekly plan\"\n            recipe={this.state.recipe}\n            onClose={this.handleModalClose} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(RecipeDetail);\n\n\n\n","import React from \"react\";\n\ninterface IProps {\n}\n\nconst TermsAndConditions = (props:IProps) => {\n  return (\n    <div className=\"termsandconditions\">\n      <h1>Terms and conditions</h1>\n    </div>\n  )\n}\nexport default TermsAndConditions;\n","import React, { Component, FormEvent } from \"react\";\nimport {\n  Formik,\n  FormikActions,\n  FormikProps,\n  Form,\n  Field,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"../Input/Input\";\nimport InputList from \"../InputList/InputList\";\nimport { emptyIngredient } from '../InputList/InputList';\nimport { getEnv } from '../../config'\nimport \"./RecipeEditForm.css\";\n\nexport interface RecipeEditFormProps {\n  onSubmit: any,\n  recipe: iFormValues,\n}\n\n\nexport interface iIngredient {\n  amount: number;\n  measurement: string;\n  ingredient: string;\n}\n\nexport interface RecipeEditFormState {\n  isImageChanged: boolean,\n  title: string,\n  image: string,\n  instructions: string,\n  ingredients: iIngredient[],\n}\n\ninterface iFormValues {\n  title: string;\n  image: string;\n  instructions: string;\n  ingredients: iIngredient[];\n}\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Title is required!\"),\n  //image: Yup.string()\n  //  .required(\"Image is not? required!\"),\n  instructions: Yup.string()\n    .required(\"Instructions is required!\"),\n  ingredients: Yup.array()\n    .required(\"Ingredients are required!\"),\n});\n\nclass RecipeEditForm extends Component<RecipeEditFormProps, RecipeEditFormState> {\n\n  constructor(props: RecipeEditFormProps) {\n    super(props);\n\n    console.log(props.recipe);\n\n    this.state = {\n      title: props.recipe.title,\n      image: getEnv('IMAGE_PREFIX')+props.recipe.image || getEnv('FALLBACK_IMAGE'),\n      instructions: props.recipe.instructions,\n      ingredients: [emptyIngredient],\n      isImageChanged: false,\n    }\n  }\n\n  handleAddItem = (e: FormEvent) => {\n    e.preventDefault();\n\n    let { ingredients } = this.state\n\n    ingredients = [\n      ...ingredients,\n      {\n        amount: 0,\n        measurement: \"\",\n        ingredient: \"\",\n      },\n    ];\n\n    this.setState({ ingredients });\n  }\n\n  handleIngredientChange = (ingredients: []) => {\n    this.setState({ ingredients })\n  }\n\n  handleInputFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ isImageChanged: true });\n    const fileList = e.target.files || [];\n\n    if (fileList.length > 0) {\n      let file: File = fileList[0];\n      const reader = new FileReader();\n      reader.onload = (e: Event) => {\n        if (typeof reader.result === 'string') {\n          this.setState({ image: reader.result })\n        }\n      }\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  render() {\n    const onSubmit = this.props.onSubmit;\n    let initialValues = {\n      title: this.state.title,\n      image: this.props.recipe.image || \"\",\n      instructions: this.props.recipe.instructions || \"\",\n      ingredients: this.props.recipe.ingredients || [emptyIngredient],\n    };\n\n    return (\n      <div className=\"RecipeForm\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(\n            values: iFormValues,\n            actions: FormikActions<iFormValues>\n          ) => {\n            onSubmit(\n              {\n                title: values.title,\n                image: this.state.isImageChanged ? this.state.image : '',\n                instructions: values.instructions,\n                ingredients: values.ingredients,\n              },\n              actions\n            );\n          }}\n          render={(formikBag: FormikProps<iFormValues>) => (\n            <Form>\n              {/* {formikBag.errors.general && <p>{formikBag.errors.general}</p>} */}\n              <div className=\"columns\">\n                <div className=\"column\">\n                <figure className=\"image is-128x128\">\n                  <img id=\"imagePreview\" src={this.state.image} alt=\"\" />\n                </figure>\n                </div>\n                <div className=\"column\">\n                  <div className=\"file is-boxed\">\n                    <label className=\"file-label\">\n                      <input className=\"file-input\" type=\"file\" name=\"resume\"\n                        onChange={this.handleInputFileChange}\n                        accept='image/*'\n                      />\n                      <span className=\"file-cta\">\n                        <span className=\"file-icon\">\n                          <i className=\"fas fa-upload\"></i>\n                        </span>\n                        <span className=\"file-label\">\n                          Choose an image…\n                        </span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                {formikBag.errors.image\n                  && <p className=\"help is-danger\">{formikBag.errors.image}</p>\n                }\n              </div>\n\n\n              <label>Title</label>\n              <Input\n                name=\"title\"\n                className=\"\"\n                type=\"text\"\n                placeholder=\"Title\"\n                value={formikBag.values.title}\n                onChange={formikBag.handleChange}\n                onBlur={formikBag.handleBlur}\n                error={\n                  formikBag.touched.title ? formikBag.errors.title || \"\" : \"\"\n                }\n              />\n\n              <label>Ingredients</label>\n              <InputList\n                items={formikBag.values.ingredients}\n                onChange={(ingredients: []) => formikBag.setFieldValue(\"ingredients\", ingredients)}\n              />\n              {formikBag.errors.ingredients\n                && <p className=\"help is-danger\">{formikBag.errors.ingredients}</p>\n              }\n\n              <div className=\"control\">\n                <label>Instructions</label>\n                <Field\n                  component=\"textarea\"\n                  className=\"textarea\"\n                  name=\"instructions\"\n                  value={formikBag.values.instructions}\n                  onChange={formikBag.handleChange}\n                  onBlur={formikBag.handleBlur}\n                  error={\n                    formikBag.touched.instructions ? formikBag.errors.instructions || \"\" : \"\"\n                  }\n                  placeholder=\"Instructions\">\n                </Field>\n                {formikBag.errors.instructions\n                  && <p className=\"help is-danger\">{formikBag.errors.instructions}</p>\n                }\n              </div>\n\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button\n                    className=\"button\"\n                    type=\"submit\"\n                    // disabled={!formikBag.isValid}\n                  >\n                    Create\n                  </button>\n                </p>\n              </div>\n              <button className=\"button\" disabled>Preview</button>\n            </Form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RecipeEditForm;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { iRootState, Dispatch } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { ApiResponse } from \"apisauce\";\nimport { FormikActions } from \"formik\";\nimport { iApi } from \"../../services/Api\";\nimport { HeaderLoggedIn } from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { RecipeTags, iRecipeTag } from \"../../components/RecipeTags/RecipeTags\";\nimport RecipeEditForm, { iIngredient } from \"../../components/RecipeEditForm/RecipeEditForm\";\nimport './RecipeEdit.css';\n\nconst mapState = (state: iRootState) => ({\n  user: state.user,\n  isLoggedIn: state.user.access_token !== null\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n\n});\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>;\ntype Props = connectedProps & { api: iApi }\n\ninterface RecipeEditState {\n  tags: any[],\n  selectedTags: Number[],\n  recipe: iRecipe,\n  slug: string,\n}\n\ninterface SelectedTag {\n  id: number,\n}\ninterface iRecipe {\n  title: string;\n  image: string;\n  instructions: string;\n  ingredients: iIngredient[];\n}\n\nclass RecipeEdit extends Component<Props, RecipeEditState> {\n  url = window.location.pathname;\n  state: RecipeEditState = {\n    slug: this.url.substr(this.url.lastIndexOf('/') + 1),\n    tags: [],\n    selectedTags: [],\n    recipe: {\n      title: '',\n      image: '',\n      instructions: '',\n      ingredients: [],\n    },\n  }\n\n  handleSubmit = async (values: any, actions: FormikActions<any>) => {\n    console.log('RecipeEdit.handleSubmit');\n    console.log(values);\n\n    const { api } = this.props\n\n    actions.setSubmitting(true);\n    console.log(this.state.selectedTags);\n    const response: ApiResponse<any> = await api.recipeUpdate({\n      instructions: values.instructions,\n      title: values.title,\n      tags: this.state.selectedTags,\n      slug: this.state.slug,\n    }, this.props.user.access_token);\n\n    actions.setSubmitting(false);\n\n    if (!response.ok) {\n      actions.setErrors({\n        general: \"Fel, kunde inte updatera recept\"\n      });\n      return;\n    }\n\n    //\n\n    actions.setSubmitting(true);\n\n    const recipe_id = response.data.recipe.id;\n\n    await api.recipeIngredientUpdate({\n      ingredients: values.ingredients,\n      recipe_id: recipe_id,\n    }, this.props.user.access_token);\n\n    const imageResponse: ApiResponse<any> = await api.recipeImage({\n\n      image: values.image,\n      recipe_id: recipe_id,\n    }, this.props.user.access_token);\n\n    actions.setSubmitting(false);\n\n    if (!imageResponse.ok) {\n      actions.setErrors({\n        general: \"Fel, kunde inte spara bild\"\n      });\n      return;\n    }\n  };\n\n\n  async componentDidMount () {\n    console.log(isEmpty(this.state.recipe));\n    console.log(this.state.recipe)\n    const { api } = this.props\n\n    const response: ApiResponse<any> = await api.recipeTags(this.props.user.access_token);\n    this.setState({ tags: response.data })\n\n    if (!response.ok) {\n        console.log(\"TAG ERRORRR\")\n      return;\n    }\n\n    // Hämta receptdata\n    const recipeResponse: ApiResponse<any> = await api.recipeBySlug(this.props.user.access_token, this.state.slug);\n    if (!recipeResponse.ok) {\n      console.log(\"RECIPE ERRORRR\")\n      return;\n    }\n\n    const selectedTagsObjects = recipeResponse.data.recipe.recipe_tags;\n\n    const selectedTags = selectedTagsObjects.map((obj: SelectedTag) => {\n      return obj.id;\n    });\n\n    this.setState({ selectedTags: selectedTags});\n\n    let ingredients: iIngredient[] = recipeResponse.data.recipe.recipe_ingredients.map((ingredients: any) => {\n      return  {\n        amount: ingredients.amount,\n        measurement: ingredients.measurement,\n        ingredient: ingredients.ingredient.name }\n    });\n\n\n    const formattedRecipe: iRecipe = {\n      title: recipeResponse.data.recipe.title,\n      image: recipeResponse.data.recipe.image,\n      instructions: recipeResponse.data.recipe.instructions,\n      ingredients: ingredients,\n    };\n    this.setState({ recipe: formattedRecipe }, () => {\n      console.log(isEmpty(this.state.recipe));\n    });\n    console.log(this.state.recipe);\n\n  }\n\n  handleToggleTag = (tag: iRecipeTag) => {\n    let { selectedTags } = this.state\n\n    if (selectedTags.includes(tag.id)) {\n      selectedTags = selectedTags.filter(x => x !== tag.id)\n    } else {\n      selectedTags = [tag.id, ...selectedTags]\n    }\n\n    this.setState({ selectedTags });\n  }\n\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return <Redirect to={\"/\"} />;\n    }\n\n    return (\n      <div className=\"CreateRecipe\">\n        <HeaderLoggedIn  />\n        <main className=\"container\">\n          <div className=\"CreateRecipe__Container columns\">\n            <div className=\"CreateRecipe__Container--Left column is-two-fifths\">\n              Edit Recipe\n              <RecipeTags\n                tags={this.state.tags}\n                selectedTags={this.state.selectedTags}\n                onToggleTag={this.handleToggleTag}\n              />\n            </div>\n            <div className=\"CreateRecipe__Container--Right column\">\n              {this.state.recipe && !isEmpty(this.state.recipe) &&\n                <RecipeEditForm recipe={this.state.recipe} onSubmit={this.handleSubmit} />\n              }\n            </div>\n          </div>\n        </main>\n        <Footer copyrightText=\"\" />\n      </div>\n    );\n  }\n}\n\nconst isEmpty  = (obj:Object) => Object.values(obj).every(x => (x === null || x === '' || x.length === 0));\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(RecipeEdit);\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { getEnv } from \"../../config\";\nimport Api from \"../../services/Api\";\nimport StartLoggedIn from \"../StartLoggedIn/StartLoggedIn\";\nimport StartLoggedOut from \"../StartLoggedOut/StartLoggedOut\";\nimport LogIn from \"../LogIn/LogIn\";\nimport LogOut from \"../LogOut/LogOut\";\nimport Register from \"../Register/Register\";\nimport ResetPassword from \"../ResetPassword/ResetPassword\";\nimport CreateResetPassword from \"../CreateResetPassword/CreateResetPassword\";\nimport CreateRecipe from \"../CreateRecipe/CreateRecipe\";\nimport BrowseRecipes from \"../BrowseRecipes/BrowseRecipes\";\nimport RecipeDetail from \"../RecipeDetail/RecipeDetail\";\nimport TermsAndConditions from \"../TermsAndConditions/TermsAndConditions\";\nimport RecipeEdit from \"../RecipeEdit/RecipeEdit\";\nimport \"./App.css\";\n\nconst withApi = (Component: any) => {\n  const api = Api.create(getEnv(\"API_URL\"));\n  return (props:any) => <Component api={api} {...props} />\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={StartLoggedOut} />\n            <Route path=\"/welcome\" component={withApi(StartLoggedIn)} />\n            <Route path=\"/register\" component={withApi(Register)} />\n            <Route path=\"/login\" component={withApi(LogIn)} />\n            <Route path=\"/logout\" component={LogOut} />\n            <Route path=\"/recipe/create\" component={withApi(CreateRecipe)} />\n            <Route path=\"/recipe/browse\" component={withApi(BrowseRecipes)} />\n            <Route path=\"/recipe/detail/:slug\" component={withApi(RecipeDetail)} />\n            <Route path=\"/recipe/edit/:slug\" component={withApi(RecipeEdit)} />\n            <Route path=\"/password/create\" component={withApi(CreateResetPassword)} />\n            <Route path=\"/password/reset/:token\" component={withApi(ResetPassword)} />\n            <Route path=\"/terms-and-conditions\" component={TermsAndConditions} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  access_token: null,\n}\n\nexport const user = {\n  state: initialState,\n  reducers: {\n    // handle state changes with pure functions\n    setToken(state: any, access_token: string) {\n      return {...state,  access_token: access_token}\n    },\n    logOut(state: any) {\n      return {...initialState}\n    }\n  }\n}\n","import { init, RematchRootState } from '@rematch/core'\nimport * as models from './models'\nimport createRematchPersist from '@rematch/persist'\n\nconst persistPlugin = createRematchPersist({\n  whitelist: ['user'],\n  throttle: 5000,\n  version: 1,\n})\n\nexport const store = init({\n  models,\n  plugins: [persistPlugin],\n})\n\nexport type Store = typeof store\nexport type Dispatch = typeof store.dispatch\nexport type iRootState = RematchRootState<typeof models>\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { getPersistor } from \"@rematch/persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store\";\nimport \"./index.css\";\n\nconst persistor = getPersistor();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}